import{R as e}from"./constants-lPtH_bX3.js";const r=[];for(let i=1;i<=15;i++){const o=i.toString().padStart(2,"0");r.push(o)}function s(i){if(i.length===0)return;const o=Math.floor(Math.random()*i.length);return i[o]}const a={Read:"Read",Write:"Write",Delete:"Delete"},t={Pending:"Pending",Active:"Active",Deactivated:"Deactivated"};`${s(r)}`,e.Manager,a.Read,t.Pending,`${s(r)}`,e.Support,a.Write,t.Pending,`${s(r)}`,e.Support,a.Delete,a.Write,a.Read,t.Active,`${s(r)}`,e.RestrictedUser,a.Write,a.Delete,t.Deactivated,`${s(r)}`,e.RestrictedUser,a.Read,a.Write,a.Delete,t.Pending,`${s(r)}`,e.Manager,a.Delete,a.Write,a.Read,t.Pending,`${s(r)}`,e.RestrictedUser,a.Delete,a.Read,a.Write,t.Active,`${s(r)}`,e.Sales,a.Delete,a.Read,a.Write,t.Pending,`${s(r)}`,e.Developer,a.Write,t.Pending,`${s(r)}`,e.Administrator,a.Read,t.Pending,`${s(r)}`,e.Customer,a.Delete,a.Read,a.Write,t.Active,`${s(r)}`,e.Administrator,a.Write,t.Pending,`${s(r)}`,e.HRD,a.Read,a.Delete,a.Write,t.Active,`${s(r)}`,e.Administrator,a.Delete,a.Read,t.Active,`${s(r)}`,e.Administrator,a.Read,t.Active,`${s(r)}`,e.Customer,a.Read,t.Active,`${s(r)}`,e.Administrator,a.Delete,t.Pending,`${s(r)}`,e.Support,a.Write,a.Delete,a.Read,t.Active,`${s(r)}`,e.Administrator,a.Read,a.Delete,t.Active,`${s(r)}`,e.Developer,a.Read,a.Delete,a.Write,t.Pending,`${s(r)}`,e.Developer,a.Delete,a.Write,t.Active,`${s(r)}`,e.Manager,a.Read,a.Delete,t.Pending,`${s(r)}`,e.Support,a.Delete,a.Write,a.Read,t.Active,`${s(r)}`,e.RestrictedUser,a.Read,t.Active,`${s(r)}`,e.Sales,a.Delete,t.Pending,`${s(r)}`,e.Support,a.Delete,a.Write,a.Read,t.Pending,`${s(r)}`,e.Support,a.Write,a.Read,a.Delete,t.Active,`${s(r)}`,e.Developer,a.Read,a.Write,t.Pending,`${s(r)}`,e.Developer,a.Write,a.Read,a.Delete,t.Active,`${s(r)}`,e.Manager,a.Read,a.Write,a.Delete,t.Pending,`${s(r)}`,e.Sales,a.Delete,t.Pending,`${s(r)}`,e.Sales,a.Delete,a.Read,t.Deactivated,`${s(r)}`,e.Support,a.Write,t.Active,`${s(r)}`,e.HRD,a.Write,a.Read,a.Delete,t.Deactivated,`${s(r)}`,e.Customer,a.Delete,a.Write,a.Read,t.Deactivated,`${s(r)}`,e.Customer,a.Delete,a.Read,a.Write,t.Pending,`${s(r)}`,e.Administrator,a.Delete,a.Write,a.Read,t.Deactivated,`${s(r)}`,e.HRD,a.Read,a.Write,t.Deactivated,`${s(r)}`,e.HRD,a.Write,t.Deactivated,`${s(r)}`,e.Sales,a.Delete,t.Pending,`${s(r)}`,e.Manager,a.Write,t.Pending,`${s(r)}`,e.Support,a.Write,t.Deactivated,`${s(r)}`,e.Customer,a.Write,t.Deactivated,`${s(r)}`,e.Manager,a.Read,a.Delete,a.Write,t.Active,`${s(r)}`,e.Manager,a.Delete,a.Read,t.Active,`${s(r)}`,e.Sales,a.Delete,a.Read,t.Deactivated,`${s(r)}`,e.HRD,a.Read,a.Write,a.Delete,t.Deactivated,`${s(r)}`,e.HRD,a.Write,a.Delete,a.Read,t.Active,`${s(r)}`,e.Manager,a.Read,t.Pending,`${s(r)}`,e.Manager,a.Write,t.Pending,`${s(r)}`,e.Sales,a.Write,a.Delete,a.Read,t.Deactivated,`${s(r)}`,e.HRD,a.Read,t.Active,`${s(r)}`,e.Developer,a.Read,a.Delete,a.Write,t.Pending,`${s(r)}`,e.Sales,a.Delete,a.Read,a.Write,t.Active,`${s(r)}`,e.Administrator,a.Write,a.Delete,a.Read,t.Deactivated,`${s(r)}`,e.Sales,a.Read,a.Write,t.Pending,`${s(r)}`,e.Sales,a.Write,a.Read,a.Delete,t.Active,`${s(r)}`,e.Administrator,a.Write,a.Delete,t.Active,`${s(r)}`,e.Support,a.Read,a.Delete,t.Active,`${s(r)}`,e.Customer,a.Write,a.Read,t.Active,`${s(r)}`,e.Support,a.Write,a.Read,t.Active,`${s(r)}`,e.Developer,a.Delete,t.Pending,`${s(r)}`,e.Manager,a.Delete,a.Read,a.Write,t.Deactivated,`${s(r)}`,e.Sales,a.Read,a.Write,t.Pending,`${s(r)}`,e.HRD,a.Delete,a.Write,a.Read,t.Deactivated,`${s(r)}`,e.Customer,a.Write,t.Active,`${s(r)}`,e.Sales,a.Read,a.Write,t.Active,`${s(r)}`,e.RestrictedUser,a.Write,t.Deactivated,`${s(r)}`,e.HRD,a.Read,a.Write,t.Active,`${s(r)}`,e.HRD,a.Delete,t.Active,`${s(r)}`,e.HRD,a.Write,t.Deactivated,`${s(r)}`,e.HRD,a.Read,a.Write,t.Active,`${s(r)}`,e.Administrator,a.Read,a.Write,a.Delete,t.Deactivated,`${s(r)}`,e.Developer,a.Write,t.Deactivated,`${s(r)}`,e.Support,a.Read,t.Active,`${s(r)}`,e.RestrictedUser,a.Read,a.Delete,a.Write,t.Deactivated,`${s(r)}`,e.Sales,a.Read,a.Delete,a.Write,t.Active,`${s(r)}`,e.Sales,a.Delete,a.Read,a.Write,t.Deactivated,`${s(r)}`,e.RestrictedUser,a.Read,a.Delete,t.Active,`${s(r)}`,e.Developer,a.Write,a.Read,t.Active,`${s(r)}`,e.Support,a.Delete,a.Write,a.Read,t.Active,`${s(r)}`,e.HRD,a.Write,a.Read,a.Delete,t.Active,`${s(r)}`,e.Manager,a.Write,t.Pending,`${s(r)}`,e.Developer,a.Write,a.Read,a.Delete,t.Pending,`${s(r)}`,e.Customer,a.Write,a.Read,t.Pending,`${s(r)}`,e.HRD,a.Write,a.Delete,t.Deactivated,`${s(r)}`,e.Customer,a.Delete,a.Read,t.Deactivated,`${s(r)}`,e.RestrictedUser,a.Write,a.Read,t.Active,`${s(r)}`,e.Sales,a.Read,t.Pending,`${s(r)}`,e.Customer,a.Delete,a.Read,t.Pending,`${s(r)}`,e.Manager,a.Write,a.Delete,t.Active,`${s(r)}`,e.HRD,a.Read,t.Deactivated,`${s(r)}`,e.RestrictedUser,a.Write,t.Active,`${s(r)}`,e.HRD,a.Write,t.Deactivated,`${s(r)}`,e.Customer,a.Write,a.Delete,t.Deactivated,`${s(r)}`,e.Developer,a.Write,t.Active,`${s(r)}`,e.HRD,a.Write,a.Delete,a.Read,t.Pending,`${s(r)}`,e.Customer,a.Write,t.Active,`${s(r)}`,e.Manager,a.Delete,a.Write,t.Pending,`${s(r)}`,e.Manager,a.Write,a.Read,t.Pending;Object.values(t).map(i=>({name:i,value:i}));Object.values(a).map(i=>({name:i,value:i}));Object.entries(e).map(([i,o])=>({name:o,value:i}));const m=i=>`/storage/${i}`;export{m as A};
